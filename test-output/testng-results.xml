<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-08T17:05:34 IST" name="maventestng" finished-at="2023-07-08T17:06:40 IST" duration-ms="66096">
    <groups>
    </groups>
    <test started-at="2023-07-08T17:05:34 IST" name="chrome" finished-at="2023-07-08T17:06:40 IST" duration-ms="66096">
      <class name="test_Package.Test_Class1">
        <test-method is-config="true" signature="BeforeTest(java.lang.String)[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:05:34 IST" name="BeforeTest" finished-at="2023-07-08T17:06:33 IST" duration-ms="59253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:33 IST" name="beforeClass" finished-at="2023-07-08T17:06:33 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:34 IST" name="beforeMethod" finished-at="2023-07-08T17:06:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:34 IST" name="test1" finished-at="2023-07-08T17:06:34 IST" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:34 IST" name="afterMethod" finished-at="2023-07-08T17:06:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:34 IST" name="AfterMethod" finished-at="2023-07-08T17:06:34 IST" duration-ms="866" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=Test_Class1.test1()[pri:0, instance:test_Package.Test_Class1@33d512c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:34 IST" name="beforeMethod" finished-at="2023-07-08T17:06:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:34 IST" name="test2" finished-at="2023-07-08T17:06:34 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:35 IST" name="afterMethod" finished-at="2023-07-08T17:06:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:35 IST" name="AfterMethod" finished-at="2023-07-08T17:06:35 IST" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=Test_Class1.test2()[pri:0, instance:test_Package.Test_Class1@33d512c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:35 IST" name="beforeMethod" finished-at="2023-07-08T17:06:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test3()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:35 IST" name="test3" finished-at="2023-07-08T17:06:35 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:35 IST" name="AfterMethod" finished-at="2023-07-08T17:06:35 IST" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SUCCESS method=Test_Class1.test3()[pri:0, instance:test_Package.Test_Class1@33d512c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:35 IST" name="afterMethod" finished-at="2023-07-08T17:06:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:35 IST" name="beforeMethod" finished-at="2023-07-08T17:06:35 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDashboardElement()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:35 IST" name="verifyDashboardElement" finished-at="2023-07-08T17:06:40 IST" duration-ms="4773" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index> but was:<https://opensource-demo.orangehrmlive.com/web/index.php/auth/login>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index> but was:<https://opensource-demo.orangehrmlive.com/web/index.php/auth/login>
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:115)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:125)
at test_Package.Test_Class1.verifyDashboardElement(Test_Class1.java:84)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDashboardElement -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:40 IST" name="afterMethod" finished-at="2023-07-08T17:06:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:40 IST" name="AfterMethod" finished-at="2023-07-08T17:06:40 IST" duration-ms="211" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDashboardElement status=FAILURE method=Test_Class1.verifyDashboardElement()[pri:0, instance:test_Package.Test_Class1@33d512c1] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at java.base/java.io.File.<init>(File.java:278)
at testUtility.Screenshot.ScreenShotCaptureMethod(Screenshot.java:18)
at test_Package.BaseClass.AfterMethod(BaseClass.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:40 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1688816200693" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="abcd()[pri:2, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:40 IST" name="abcd" finished-at="2023-07-08T17:06:40 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at java.base/java.io.File.<init>(File.java:278)
at testUtility.Screenshot.ScreenShotCaptureMethod(Screenshot.java:18)
at test_Package.BaseClass.AfterMethod(BaseClass.java:48)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abcd -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:40 IST" name="afterMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1688816200712" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:40 IST" name="AfterMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1688816200734" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:40 IST" name="afterClass" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1688816200738" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:test_Package.Test_Class1@33d512c1]" started-at="2023-07-08T17:06:40 IST" name="aftertest" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1688816200743" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- test_Package.Test_Class1 -->
    </test> <!-- chrome -->
  </suite> <!-- maventestng -->
</testng-results>
